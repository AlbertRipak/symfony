



Копіюємо https://github.com/javer/symfony5-project.git

Вводимо команду в terminal PHPstorm: docker-compose up 
та очікуємо наступне повідомлення
database_1  | ERROR: Can't initialize batch_readline - may be the input source is a directory or a block device.
symfony_database_1 exited with code 1


Розгортання Symfony у docker.

Для проекту нам необхідні такі інструменти:
Docker	
	MySQL
	PHP-FPM
	NGINX
	SYMFONY
Docker-Compose
--------------------------------------------------------------------------------------------------------------
Створюємо папку Symfony з необхідним вмістом:
Symfony/	
	docker-compose.yml
	.env

	--database/
		Dockerfile
		--data/

	--php-fpm/
		Dockerfile

	--nginx/
		Dockerfile
		nginx.conf
		--conf.d/
			--default.conf
		--sites/
			--default.conf

	--logs/
		--nginx/

--------------------------------------------------------------------------------------------------------------
Створюємо контейнер MySQL
# Symfony/database/Dockerfile

FROM mariadb:latest
CMD ["mysqld"]
EXPOSE 3306

--------------------------------------------------------------------------------------------------------------
Створюємо контейнер PHP-FPM

# Symfony/php-fpm/Dockerfile

FROM php:fpm-alpine
COPY wait-for-it.sh /usr/bin/wait-for-it
RUN chmod +x /usr/bin/wait-for-it
RUN apk --update --no-cache add git
RUN docker-php-ext-install pdo_mysql
RUN mkdir /symfony
COPY --from=composer /usr/bin/composer /usr/bin/composer
WORKDIR /symfony
CMD composer install ; wait-for-it database:3306 -- bin/console doctrine:migrations:migrate ;  php-fpm 
EXPOSE 9000

--------------------------------------------------------------------------------------------------------------
Створюємо контейнер NGINX

# Symfony/nginx/Dockerfile

FROM nginx:alpine
WORKDIR /symfony
CMD ["nginx"]
EXPOSE 80

Далі створюємо файл nginx.conf
# Symfony/nginx/nginx.conf
user  nginx;
worker_processes  4;
daemon off;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    access_log  /var/log/nginx/access.log;
    sendfile        on;
    keepalive_timeout  65;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-available/*.conf;
}

Далі створюємо файл в папці Symfony/nginx/conf.d/default.conf
# Symfony/nginx/conf.d/default.conf

upstream php-upstream {
    server php-fpm:9000;
}

Далі створюємо файл в папці Symfony/nginx/sites/default.conf
# Symfony/nginx/sites/default.conf

server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    server_name localhost;
    root /symfony;
    index index.php index.html index.htm;

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 600;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}

--------------------------------------------------------------------------------------------------------------
Налаштування Docker-Compose
# Symfony/docker-compose.yml
version: '3'

services:
  database:
    build:
      context: ./database
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/data:/var/lib/mysql

  php-fpm:
    build:
      context: ./php-fpm
    depends_on:
      - database
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@database:3306/${DATABASE_NAME}?serverVersion=5.7
    volumes:
      - ../src:/symfony

  nginx:
    build:
      context: ./nginx
    volumes:
      - ../src:/symfony
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./logs:/var/log
    depends_on:
      - php-fpm
    ports:
      - "80:80"

Створюємо файл .env
# Symfony/.env

DATABASE_NAME=symfony
DATABASE_USER=appuser
DATABASE_PASSWORD=apppassword
DATABASE_ROOT_PASSWORD=secret

APP_ENV=dev
APP_SECRET=24e17c47430bd2044a61c131c1cf6990

--------------------------------------------------------------------------------------------------------------


Скачуємо проет з https://github.com/AlbertRipak/symfony.git
Відкриваємо проект в PHPStorm, за допомогою команди docker-compose up в командному рядку нашого PHPStorm 
та натискаємо Enter. (Далі необхідно дозволити доступ вспливаючим вікнам [Share in].(для Windows))



